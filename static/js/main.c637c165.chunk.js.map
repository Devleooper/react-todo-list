{"version":3,"sources":["components/counter/counter.jsx","components/todoitem/todo.item.jsx","components/card/card.jsx","components/animated/text/animated.text.jsx","components/app.jsx","serviceWorker.js","index.js"],"names":["Counter","this","props","count","Component","TodoItem","className","text","onClick","onDeletion","role","aria-label","Card","state","input","list","updateInput","bind","pushList","handleDelete","event","setState","target","value","prevState","onCreated","index","splice","onDeleted","placeholder","onChange","map","item","key","AnimatedText","style","textStyle","color","fontSize","textAlign","App","animatePlus","animateMinus","handleMinusAnimationEnd","handlePlusAnimationEnd","onAnimationEnd","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c637c165.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Counter extends Component {\r\n  render() {\r\n    return <h3> you have inserted {this.props.count} items </h3>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./todo.item.css\";\r\n\r\nexport default class TodoItem extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"item-container\">\r\n        <h3>{this.props.text}</h3>\r\n        <div className=\"side-btn\">\r\n          <button className=\"delete-btn\" onClick={this.props.onDeletion}>\r\n            <span role=\"img\" aria-label=\"delete\">\r\n              ‚ùå\r\n            </span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./card.css\";\r\nimport Counter from \"../counter/counter\";\r\nimport TodoItem from \"../todoitem/todo.item\";\r\n\r\nexport default class Card extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      count: 0,\r\n      input: \"\",\r\n      list: [],\r\n    };\r\n\r\n    this.updateInput = this.updateInput.bind(this);\r\n    this.pushList = this.pushList.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n  }\r\n\r\n  updateInput(event) {\r\n    this.setState({ input: event.target.value });\r\n  }\r\n\r\n  pushList() {\r\n    this.setState((prevState) => ({\r\n      list: [...prevState.list, prevState.input],\r\n      input: \"\",\r\n      count: prevState.count + 1,\r\n    }));\r\n\r\n    this.props.onCreated();\r\n  }\r\n\r\n  handleDelete(index) {\r\n    let list = [...this.state.list];\r\n    list.splice(index, 1);\r\n\r\n    this.setState((prevState) => ({\r\n      list: list,\r\n      count: prevState.count - 1,\r\n    }));\r\n\r\n    this.props.onDeleted();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <h1>\r\n          Todo List&nbsp;&nbsp;\r\n          <span role=\"img\" aria-label=\"fire\">\r\n            üî•\r\n          </span>\r\n        </h1>\r\n        <Counter count={this.state.count}></Counter>\r\n        <div className=\"input-btn-container\">\r\n          <input\r\n            className=\"card-input\"\r\n            placeholder=\"insert a value..\"\r\n            onChange={this.updateInput}\r\n            value={this.state.input}\r\n          ></input>\r\n          {this.state.input ? (\r\n            <button className=\"submit-btn\" onClick={this.pushList}>\r\n              Save&nbsp;&nbsp;&nbsp;\r\n              <span role=\"img\" aria-label=\"light\">\r\n                üí°\r\n              </span>\r\n            </button>\r\n          ) : null}\r\n        </div>\r\n        <ul className=\"todo-list\">\r\n          {this.state.list.map((item, index) => (\r\n            <TodoItem\r\n              key={index}\r\n              text={item}\r\n              onDeletion={() => {\r\n                this.handleDelete(index);\r\n              }}\r\n            ></TodoItem>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function AnimatedText({ style, text }) {\r\n  return (\r\n    <div style={style}>\r\n      <h1>{text}</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./app.css\";\nimport Card from \"./card/card\";\nimport AnimatedText from \"./animated/text/animated.text\";\n\nconst textStyle = {\n  color: \"#282c34\",\n  fontSize: \"36pt\",\n  textAlign: \"center\",\n};\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      animatePlus: false,\n      animateMinus: false,\n    };\n\n    this.animateMinus = this.animateMinus.bind(this);\n    this.animatePlus = this.animatePlus.bind(this);\n    this.handleMinusAnimationEnd = this.handleMinusAnimationEnd.bind(this);\n    this.handlePlusAnimationEnd = this.handlePlusAnimationEnd.bind(this);\n  }\n\n  animatePlus() {\n    this.setState((prevState) => ({\n      animatePlus: true,\n      animateMinus: prevState.animateMinus\n        ? !prevState.animateMinus\n        : prevState.animateMinus,\n    }));\n  }\n\n  animateMinus() {\n    this.setState((prevState) => ({\n      animatePlus: prevState.animatePlus\n        ? !prevState.animatePlus\n        : prevState.animatePlus,\n      animateMinus: true,\n    }));\n  }\n\n  handleMinusAnimationEnd() {\n    this.setState({ animateMinus: false });\n  }\n\n  handlePlusAnimationEnd() {\n    this.setState({ animatePlus: false });\n  }\n\n  render() {\n    let { animateMinus, animatePlus } = this.state;\n    return (\n      <div className=\"App\">\n        {animateMinus ? (\n          <div\n            className=\"animated-text-container left\"\n            onAnimationEnd={this.handleMinusAnimationEnd}\n          >\n            <AnimatedText style={textStyle} text={\"-1\"} />\n          </div>\n        ) : null}\n        <Card\n          className=\"card\"\n          onCreated={this.animatePlus}\n          onDeleted={this.animateMinus}\n        ></Card>\n        {animatePlus ? (\n          <div\n            className=\"animated-text-container right\"\n            onAnimationEnd={this.handlePlusAnimationEnd}\n          >\n            <AnimatedText style={textStyle} text={\"+1\"} />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}